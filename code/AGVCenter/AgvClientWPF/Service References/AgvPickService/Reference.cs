//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgvClientWPF.AgvPickService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AgvPickService.IPickService")]
    public interface IPickService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPickService/PickListExists", ReplyAction="http://tempuri.org/IPickService/PickListExistsResponse")]
        bool PickListExists(string nr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPickService/CreatePickList", ReplyAction="http://tempuri.org/IPickService/CreatePickListResponse")]
        AGVCenterLib.Model.Message.ResultMessage CreatePickList(string pickListNr, string[] uniqItemsNrs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPickService/GetPickListUniqItemsByNr", ReplyAction="http://tempuri.org/IPickService/GetPickListUniqItemsByNrResponse")]
        AGVCenterLib.Model.ViewModel.UniqueItemModel[] GetPickListUniqItemsByNr(string nr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPickService/CreateOutStockTaskByNr", ReplyAction="http://tempuri.org/IPickService/CreateOutStockTaskByNrResponse")]
        AGVCenterLib.Model.Message.ResultMessage CreateOutStockTaskByNr(string nr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPickService/GetPickListOutStockTasks", ReplyAction="http://tempuri.org/IPickService/GetPickListOutStockTasksResponse")]
        AGVCenterLib.Model.ViewModel.StockTaskModel[] GetPickListOutStockTasks(string nr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPickService/SearchList", ReplyAction="http://tempuri.org/IPickService/SearchListResponse")]
        AGVCenterLib.Model.ViewModel.PickListModel[] SearchList(AGVCenterLib.Model.SearchModel.PickListSearchModel searchModel, int limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPickService/DeletePickListForTest", ReplyAction="http://tempuri.org/IPickService/DeletePickListForTestResponse")]
        void DeletePickListForTest(string pickListNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPickService/GetPickListStorageByNr", ReplyAction="http://tempuri.org/IPickService/GetPickListStorageByNrResponse")]
        AGVCenterLib.Model.ViewModel.PickListStorageViewModel[] GetPickListStorageByNr(string nr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPickServiceChannel : AgvClientWPF.AgvPickService.IPickService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PickServiceClient : System.ServiceModel.ClientBase<AgvClientWPF.AgvPickService.IPickService>, AgvClientWPF.AgvPickService.IPickService {
        
        public PickServiceClient() {
        }
        
        public PickServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PickServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PickServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PickServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool PickListExists(string nr) {
            return base.Channel.PickListExists(nr);
        }
        
        public AGVCenterLib.Model.Message.ResultMessage CreatePickList(string pickListNr, string[] uniqItemsNrs) {
            return base.Channel.CreatePickList(pickListNr, uniqItemsNrs);
        }
        
        public AGVCenterLib.Model.ViewModel.UniqueItemModel[] GetPickListUniqItemsByNr(string nr) {
            return base.Channel.GetPickListUniqItemsByNr(nr);
        }
        
        public AGVCenterLib.Model.Message.ResultMessage CreateOutStockTaskByNr(string nr) {
            return base.Channel.CreateOutStockTaskByNr(nr);
        }
        
        public AGVCenterLib.Model.ViewModel.StockTaskModel[] GetPickListOutStockTasks(string nr) {
            return base.Channel.GetPickListOutStockTasks(nr);
        }
        
        public AGVCenterLib.Model.ViewModel.PickListModel[] SearchList(AGVCenterLib.Model.SearchModel.PickListSearchModel searchModel, int limit) {
            return base.Channel.SearchList(searchModel, limit);
        }
        
        public void DeletePickListForTest(string pickListNr) {
            base.Channel.DeletePickListForTest(pickListNr);
        }
        
        public AGVCenterLib.Model.ViewModel.PickListStorageViewModel[] GetPickListStorageByNr(string nr) {
            return base.Channel.GetPickListStorageByNr(nr);
        }
    }
}
